{
	"folders":
	[
		{
			"path": "."
		}
	],
	"build_systems":
	[
		{
			"name": "Game: edit data",
			"shell": true,
			"cmd": ["./edit_data.sh"],
			"working_dir": "${project_path}"
		},
		{
			"name": "Game: edit metadata",
			"shell": true,
			"cmd": ["./edit_metadata.sh"],
			"working_dir": "${project_path}"
		},
		{
			"name": "Game: build",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./build.sh"],
			"file_regex": "(.*\\.sh)(?:\\: line )([\\d]+)(?:\\:)([\\d]+)? (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Game: build and run",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./build.sh && ./run.sh"],
			"file_regex": "(.*\\.sh)(?:\\: line )([\\d]+)(?:\\:)([\\d]+)? (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Game: run",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./run.sh"],
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Game: test",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./test.sh -f $file_base_name"],
			// known limitation: last \n won't be detected in build output, so cannot display multi-line errors
			"file_regex": "((?:pico-boots/src|src)\\/[-\\w\\/]+\\.lua)(?:\\:| @ )([\\d]+)(?:\\:)?([\\d]+)?\\n?(.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
			"variants":
			[
				{
					"name": "(solo)",
					"cmd": ["./test.sh -f $file_base_name -m solo"]
				},
				{
					"name": "(all)",
					"cmd": ["./test.sh -f $file_base_name -m all"]
				},
				{
					"name": "*",
					"cmd": ["./test.sh"]
				},
				{
					"name": "* (solo)",
					"cmd": ["./test.sh -m solo"]
				},
				{
					"name": "* (all)",
					"cmd": ["./test.sh -m all"]
				},
				{
					"name": "helper",
					"cmd": ["./test.sh helper"],
				}
			]
		},
		{
			"name": "Engine: test",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["pico-boots/test.sh -f $file_base_name"],
			// known limitation: last \n won't be detected in build output, so cannot display multi-line errors
			"file_regex": "((?:pico-boots/src|src)\\/[-\\w\\/]+\\.lua)(?:\\:| @ )([\\d]+)(?:\\:)?([\\d]+)?\\n?(.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
			"variants":
			[
				{
					"name": "(solo)",
					"cmd": ["pico-boots/test.sh -f $file_base_name -m solo"]
				},
				{
					"name": "(all)",
					"cmd": ["pico-boots/test.sh -f $file_base_name -m all"]
				},
				{
					"name": "*",
					"cmd": ["pico-boots/test.sh"]
				},
				{
					"name": "* (solo)",
					"cmd": ["pico-boots/test.sh -m solo"]
				},
				{
					"name": "* (all)",
					"cmd": ["pico-boots/test.sh -m all"]
				}
			]
		},
		{
			"name": "All: test",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./test.sh && echo '' && pico-boots/test.sh"],
			// known limitation: last \n won't be detected in build output, so cannot display multi-line errors
			"file_regex": "((?:pico-boots/src|src)\\/[-\\w\\/]+\\.lua)(?:\\:| @ )([\\d]+)(?:\\:)?([\\d]+)?\\n?(.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Postbuild: test add_metadata",
			"working_dir": "${project_path}/pico-boots",
			"shell": true,
			"cmd": ["python3 -m scripts.test_add_metadata"],
			"file_regex": "\"(.*\\.py)\"(?:, line )([\\d]+)(?:\\:)?([\\d]+)?, (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		}
	],
	"syntax_override":
	{
		"\\.lua$":
		[
			// use 1st line if using PICO-8 from Package Control,
			// 2nd line if using version from GitHub (more features)
			// PICO-8/PICO-8"
			"sublime-PICO-8/PICO-8"
		],
		"\\.luacov":
		[
			"Lua/Lua"
		]
	}
}
